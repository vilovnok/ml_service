version: '3.8'

services:
  # ynx-frontend:
  #   container_name: ynx-frontend
  #   restart: always  
  #   build:
  #     context: ./ynx-frontend
  #   ports:
  #     - "${FR_PORT}:80"
  #   networks:
  #     - ynx-net

  # ynx-backend:
  #   container_name: ynx-backend  
  #   restart: always  
  #   build: 
  #     context: ./ynx-backend 
  #   ports:
  #     - "8000:8000"
  #   command: ["sh","/ynx-backend/app_run.sh","app"]
  #   depends_on:
  #     ynx-redis: 
  #       condition: service_started      
  #     ynx-postgres:          
  #       condition: service_healthy
  #   environment:
  #     - DATABASE_URL=postgresql+asyncpg://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME} 
  #     - CELERY_BROKER_URL=redis://ynx-redis:6379/0
  #   networks:
  #     - ynx-net

  # ynx-celery:
  #   container_name: ynx-celery    
  #   restart: always  
  #   build:
  #     context: ./ynx-backend
  #   command: ["/ynx-backend/celery_run.sh","celery_run"]    
  #   depends_on:
  #     - ynx-redis
  #     - ynx-backend
  #   environment:
  #     - CELERY_BROKER_URL=redis://ynx-redis:6379/0
  #   networks:
  #     - ynx-net    

  ynx-redis:
    container_name: ynx-redis
    image: redis:6.2-alpine
    ports:
      - "6379:6379"  
    networks:
      - ynx-net

  ynx-postgres:
    container_name: ynx-postgres
    image: postgres:14-alpine 
    restart: unless-stopped
    ports:
      - "${DB_PORT}:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ynx-net

  ynx-pgadmin:
    container_name: ynx-pgadmin
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - 5050:80
    depends_on:
      - ynx-postgres
    networks:
      - ynx-net

networks:
  ynx-net:
    driver: bridge 